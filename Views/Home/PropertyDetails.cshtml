@{
    ViewData["Title"] = "Property Details";
}

@model Property

 <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
    <script src = "https://unpkg.com/axios/dist/axios.min.js"></script>
    <script src ="~/Scripts/jquery-3.2.1.min.js"></script>
	<script src="https://maps.googleapis.com/maps/api/js?v=3&sensor=false"></script>
	<script src="/app.js"></script>


	<div class="position-relative overflow-hidden p-3 p-md-5 m-md-3 text-right">
@{
	int? uid = Context.Session.GetInt32("UserId");
  	bool alreadyLiked = Model.Associations.Any(a => a.UserId == uid);
}
  
    
	@if(uid != null)
	{
		
    if(alreadyLiked)
		{
			<span>One of my faves </span><a href="/property/@Model.PropertyId/like"><img src="http://www.pngall.com/wp-content/uploads/2016/04/Instagram-Heart-PNG.png" style="height: 30px" alt=""></a>
		}else{
			<span>Make it a fave   </span><a href="/property/@Model.PropertyId/like"><img src="http://cdn.onlinewebfonts.com/svg/download_267302.png" style="height: 30px" alt=""></a>
		<a href="/property/@Model.PropertyId/like"><h5></h5></a>
		}
	}
</div>
  
<body style="background-image: url('https://i.pinimg.com/originals/98/d5/4e/98d54e8b54e06de35b73c42e05d00ba6.jpg');  background-repeat: no-repeat;
    background-attachment: fixed;" ><div class="row">
    <div class="col-10 offset-1 bg-light" style="padding:30px">
        <h1>@Model.Title</h1>
        <p>@Model.Description </p>
    </div>
</div>

<div class="row">
    <div class="col-10 offset-1 bg-light">
        <h3>Address: @Model.Address</h3>
    </div>
</div>
<div class="row">
    <div class="col-10 offset-1 bg-light">
        <h3>Number of Bedrooms: @Model.Bedrooms</h3>
    </div>
</div>
<div class="row">
    <div class="col-10 offset-1 bg-light">
        <h3>Number of Baths: @Model.Baths</h3>
    </div>
</div>
<div class="row">
    <div class="col-10 offset-1 bg-light">
        <h3>Square Ft: @Model.SqFt.ToString("#,##0") sqft</h3>
    </div>
</div>
<div class="row">
    <div class="col-10 offset-1 bg-light">
        <h3>Lot size: @Model.LotSize.ToString("#,##0") sqft</h3>
    </div>
</div>
<div class="row">
    <div class="col-10 offset-1 bg-light">
        <h3>Year Built: @Model.Year</h3>
    </div>
</div>
<div class="row">
    <div class="col-10 offset-1 bg-light">
        <h3>Listing Type: @Model.ListingType</h3>
    </div>
</div>
<div class="row">
    <div class="col-10 offset-1 bg-light">
        <h3>Asking Price: @Model.Price.ToString("C", new System.Globalization.CultureInfo("en-US"))</h3>
    </div>
</div>
<div class="row">
    <div class="col-10 offset-1 bg-light">
        <h3>Date Added: @Model.CreatedAt</h3>
    </div>
</div>
<div class="row">
    <div class="col-10 offset-1 bg-light">
        <h3>Contact the Owner: @Model.Creator.FullName() <a href="mailto:@Model.Creator.Email">@Model.Creator.Email </h3></a>
    </div>
</div>
<div class="row">
    <div class="col-10 offset-1 bg-light">
        @if (uid == Model.Creator.UserId)
        {
			<p>Hi @Context.Session.GetString("FullName"), Since you are the one who added this property, you can 				<a href="@Model.PropertyId/edit">Edit</a> or <a href="@Model.PropertyId/delete">Remove</a> it.</p>;
		@* }else{
			<p>Sign in to see options</p>; *@
		} 
    </div>
</div>
<div class="row">
    <div class="col-10 offset-1 bg-light">
        @if (Model.ImgUrl != null)
		{
            <img style = "width:100%;" src ="@Model.ImgUrl" alt = "Property">
		}
    </div>
</div>


<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <title>Map</title>
  <style>
    #map{
      height:400px;
      width:100%;
    }
  </style>
</head>

  <h4></h4
  >
  <div id="map"></div>

  <script>
	google.maps.visualRefresh = true;

	var map;
    function initMap(){
      	getCoordinates('1045 Missions st san francisco', function(coords)){
      		var options = {
        		zoom:8,
        		//center:{lat:33.5237,lng:-117.7149}
        		center: new google.maps.LatLng(coords[0], coords[1])
        		mapTypeId: google.maps.MapTypeId.ROADMAP
      		};
      	var map = new google.maps.Map(document.getElementById('map-canvas'), options);
		})
	}
	google.maps.event.addDomListener(window, 'load', initialize);
	
      // Listen for click on map to Add marker
      google.maps.event.addListener(map, 'click', function(event){
        addMarker({coords:event.latLng});
      });

      // Add marker
      var marker = new google.maps.Marker({
        position:{lat:42.4668,lng:-70.9495},
        map:map,
        icon:'https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png'
      });

      var infoWindow = new google.maps.InfoWindow({
        content:'<h1>Lynn MA</h1>'
      });

      marker.addListener('click', function(){
        infoWindow.open(map, marker);
      });
      

      // Array of markers
      var markers = [
        {
          coords:{lat:42.4668,lng:-70.9495},
          iconImage:'https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png',
          content:'<h1>Lynn MA</h1>'
        },
        {
          coords:{lat:42.8584,lng:-70.9300},
          content:'<h1>Amesbury MA</h1>'
        },
        {
          coords:{lat:42.7762,lng:-71.0773}
        }
      ];

      // Loop through markers
      for(var i = 0;i < markers.length;i++){
        // Add marker
        addMarker(markers[i]);
      }

      // Add Marker Function
      function addMarker(props){
        var marker = new google.maps.Marker({
          position:props.coords,
          map:map,
          //icon:props.iconImage
        });

        // Check for customicon
        if(props.iconImage){
          // Set icon image
          marker.setIcon(props.iconImage);
        }

        // Check content
        if(props.content){
          var infoWindow = new google.maps.InfoWindow({
            content:props.content
          });

          marker.addListener('click', function(){
            infoWindow.open(map, marker);
          });
        }
      }
    }
  </script>
  <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBPGZ1a7Xc0EHhB-Q6CpEdFSzVKNhxlf14&callback=initMap" type="text/javascript"></script>
</body>
</html>
